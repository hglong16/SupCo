# Define upstream servers for Odoo and longpolling
upstream odoo-backend {
    server web:8069;
}

upstream odoo-lp {
    server web:8072;
}

# Server configuration for HTTPS
server {
    listen 443 ssl;
    server_name localhost;

    # Specify the location of your SSL certificate and key files
    ssl_certificate ./ssl/localhost.crt;
    ssl_certificate_key ./ssl/localhost.key;   

    client_max_body_size 256m;
    access_log /var/log/nginx/odoo-access.log;
    error_log /var/log/nginx/odoo-error.log;


    proxy_buffers 16 64k;
    proxy_buffer_size 128k;
    proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

    gzip on;
    gzip_min_length 1100;
    gzip_buffers 4 32k;
    gzip_types text/plain text/xml text/css text/less application/x-javascript application/xml application/json application/javascript;
    gzip_vary on;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location ~* /web/static/ {
        proxy_cache_valid 200 60m;
        proxy_buffering on;
        expires 864000;
        proxy_pass http://odoo-backend;
    }

    location / {
        proxy_pass http://odoo-backend;
        proxy_read_timeout 30000;
        proxy_redirect off;
    }

    location /longpolling {
        proxy_pass http://odoo-lp;
    }
}


location / {
    # ... other proxy settings ...

    # CORS headers
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
    
    # Handle OPTIONS method
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain; charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }
}
# Server configuration to redirect HTTP to HTTPS
server {
    listen 80;
    server_name localhost;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}